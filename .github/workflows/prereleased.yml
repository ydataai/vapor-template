name: Prereleased


on:
  release:
    types:
    - prereleased


env:
  COMPONENT: dashboard-api
  COMPONENT_PATH: apps/dashboard-api
  DOCKER_IMAGE_URL: ${{ secrets.PRIVATE_CONTAINER_REGISTRY }}/${{ github.repository_owner }}/dashboard-api


jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04

    outputs:
      version: ${{ steps.version.outputs.value }}

    steps:
    - name: Version
      id: version
      run: echo ::set-output name=value::${GITHUB_REF#refs/*/}

    - uses: actions/checkout@v2

    - uses: actions/cache@v2.1.7
      id: cache
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}-${{ github.workspace }}
        restore-keys: ${{ runner.os }}-spm-${{ hashFiles('Package.resolved') }}-${{ github.workspace }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.PRIVATE_CONTAINER_REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.DOCKER_IMAGE_URL }}:${{ steps.version.outputs.value }}
        secrets: |
          GIT_AUTH_TOKEN=${{ secrets.GHCR_TOKEN }}


  update-manifests:
    name: Update Manifests
    runs-on: ubuntu-20.04

    needs:
    - build

    steps:
    - name: Checkout Manifests repo
      uses: actions/checkout@v2
      with:
        repository: ydataai/manifests
        token: ${{ secrets.ACCESS_TOKEN }}

    - uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.8.5"

    - name: Update kustomization image tag
      env:
        VERSION: ${{ needs.build.outputs.version }}
      run: |
        cd ${COMPONENT_PATH}
        kustomize edit set image ${{ secrets.KUSTOMIZE_CONTAINER_IMAGE }}=${DOCKER_IMAGE_URL}:${VERSION}

    - name: Commit and push image update into manifests repo
      env:
        VERSION: ${{ needs.build.outputs.version }}
      run: |
        git config user.email "azory@ydata.ai"
        git config user.name "Azory YData Bot"
        git commit -a -m "chore(bump): [CI] [DEV] bump ${COMPONENT} to $VERSION"
        git push origin master
